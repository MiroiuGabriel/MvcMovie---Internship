@model PaginatedList<VideoGame>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameForInnerType((VideoGame model) => model.Title)
            </th>
            <th>
                @Html.DisplayNameForInnerType((VideoGame model) => model.Genre)
            </th>
            <th>
                @Html.DisplayNameForInnerType((VideoGame model) => model.Publisher)
            </th>
            <th>
                @Html.DisplayNameForInnerType((VideoGame model) => model.ReleaseDate)
            </th>
            <th>
                @Html.DisplayNameForInnerType((VideoGame model) => model.Price)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Publisher)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<!--Maybe this could become a partial view and reuse it-->

<nav aria-label="Page navigation example">
  <ul class="pagination">
    <li class="page-item @prevDisabled">
      <a class="page-link" aria-label="Previous" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)">
        <span aria-hidden="true">&laquo;</span>
      </a>
    </li>
        @for(int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(Model.PageIndex == i ? "active" : "")"><a class="page-link" asp-action="Index" asp-route-pageNumber="@(i)">@(i)</a></li>
        }
     <li class="page-item @nextDisabled">
      <a class="page-link" aria-label="Previous" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)">
        <span aria-hidden="true">&raquo;</span>
      </a>
    </li>
  </ul>
</nav>